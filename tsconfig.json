{
  "compilerOptions": {
    "target": "ES2020", // 指定 TypeScript 编译后生成的 JavaScript 版本为 ES2020
    "useDefineForClassFields": true, // 使用 ECMAScript 标准的类字段定义方式（即使用 define 语义）
    "module": "ESNext", // 指定生成的模块系统为 ESNext（即最新的 ES 模块语法）
    "lib": [
      "ES2020",         // 包含 ES2020 标准库声明
      "DOM",            // 包含 DOM（浏览器环境）相关的类型声明
      "DOM.Iterable"    // 包含可迭代的 DOM 集合类型声明
    ],
    "skipLibCheck": true, // 跳过对依赖库的类型检查，加快编译速度
    /* Bundler mode */
    "moduleResolution": "bundler", // 使用打包工具友好的模块解析方式
    "allowImportingTsExtensions": true, // 允许导入带有 .ts 扩展名的模块
    "resolveJsonModule": true, // 允许导入 .json 文件作为模块
    "isolatedModules": true, // 确保每个文件都是单独的模块（适用于 Babel 或 Vite 等工具）
    "noEmit": true, // 不生成输出文件（只做类型检查）
    
    "jsx": "preserve", // 保留 JSX 语法（不转换），交由后续工具处理
    "jsxImportSource": "vue", // 指定 JSX 的运行时库为 vue（适用于 Vue 3 + JSX/TSX）
    "esModuleInterop": true, // 允许默认导入非 ES 模块（如 CommonJS 模块）
    "sourceMap": true, // 生成 source map 文件，便于调试
    /* Linting */
    "strict": true, // 启用所有严格类型检查选项
    "noUnusedLocals": true, // 检查未使用的局部变量
    "noUnusedParameters": true, // 检查未使用的函数参数
    "noFallthroughCasesInSwitch": true, // 检查 switch 语句中 case 的贯穿（fallthrough）情况
    // "skipLibCheck": true // （已注释）同上，跳过库类型检查
  },
  "include": [
    "env.d.ts", // 包含 env.d.ts 文件
    "packages/**/*.ts", // 包含 packages 目录下所有 .ts 文件
    "packages/**/*.tsx", // 包含 packages 目录下所有 .tsx 文件
    "packages/**/*.vue", // 包含 packages 目录下所有 .vue 文件
    "packages/play/src/stories/*.stories.ts", // 包含指定目录下的 stories.ts 文件
    "vitest.config.ts" // 包含 vitest 的配置文件
  ]
}